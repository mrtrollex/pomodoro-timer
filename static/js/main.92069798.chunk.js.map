{"version":3,"sources":["components/SetTimer.js","assets/epicSax.mp3","App.js","index.js"],"names":["SetTimer","title","count","handleDecrease","handleIncrease","type","className","onClick","icon","faMinus","faPlus","App","useState","breakCount","setBreakCount","sessionCount","setSessionCount","clockCount","setClockCount","currentTimer","setCurrentTimer","undefined","loop","setLoop","isPlaying","setIsPlaying","saxSound","document","getElementById","useEffect","play","breakTimer","sessionTimer","minutes","Math","floor","seconds","convertTime","clearInterval","setInterval","prevClockCount","faPause","faPlay","pause","currentTime","error","console","log","faSync","src","sax","id","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.92069798.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMinus, faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst SetTimer = ({ title, count, handleDecrease, handleIncrease, type }) => {\r\n  return (\r\n    <div className=\"timer-container\">\r\n      <h2>{title}</h2>\r\n      <div className=\"flex actions-wrapper\">\r\n        <button onClick={() => handleDecrease(type)}>\r\n          <FontAwesomeIcon icon={faMinus} />\r\n        </button>\r\n        <span>{count}</span>\r\n        <button onClick={() => handleIncrease(type)}>\r\n          <FontAwesomeIcon icon={faPlus} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SetTimer;\r\n","export default __webpack_public_path__ + \"static/media/epicSax.5dc4c13a.mp3\";","import React, { useState, useEffect } from 'react';\nimport SetTimer from './components/SetTimer';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay, faSync, faPause } from '@fortawesome/free-solid-svg-icons';\nimport sax from './assets/epicSax.mp3';\n\nfunction App() {\n  const [breakCount, setBreakCount] = useState(5);\n  const [sessionCount, setSessionCount] = useState(3);\n  const [clockCount, setClockCount] = useState(25 * 60);\n  const [currentTimer, setCurrentTimer] = useState('Session');\n  const [loop, setLoop] = useState(undefined);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  const saxSound = document.getElementById('beep');\n\n  const convertTime = (count) => {\n    let minutes = Math.floor(count / 60);\n    let seconds = count % 60;\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n    seconds = seconds < 10 ? '0' + seconds : seconds;\n    return `${minutes}:${seconds}`;\n  };\n\n  const handlePlayPause = () => {\n    if (isPlaying) {\n      clearInterval(loop);\n      setIsPlaying(false);\n    } else {\n      setIsPlaying(true);\n      setLoop(\n        setInterval(() => {\n          if (clockCount <= 0) {\n            setCurrentTimer(currentTimer === 'Session' ? 'Break' : 'Session');\n            setClockCount(\n              currentTimer === 'Session' ? breakCount * 60 : sessionCount * 60\n            );\n          } else {\n            setClockCount((prevClockCount) => prevClockCount - 1);\n          }\n        }, 1000)\n      );\n    }\n  };\n\n  useEffect(() => {\n    if (clockCount === 0) {\n      setCurrentTimer(currentTimer === 'Session' ? 'Break' : 'Session');\n      setClockCount(\n        currentTimer === 'Session' ? breakCount * 60 : sessionCount * 60,\n        saxSound.play()\n      );\n    }\n  }, [clockCount, breakCount, currentTimer, saxSound, sessionCount]);\n\n  const handleReset = () => {\n    setBreakCount(5);\n    setSessionCount(25);\n    setClockCount(25 * 60);\n    setCurrentTimer('Session');\n    setIsPlaying(false);\n    clearInterval(loop);\n    try {\n      saxSound.pause();\n      saxSound.currentTime = 0;\n    } catch (error) {\n      console.log('dont press');\n    }\n  };\n\n  const handleDecrease = (type) => {\n    if (type === 'Session') {\n      if (sessionCount > 1) {\n        if (!isPlaying && currentTimer === 'Session') {\n          setSessionCount(sessionCount - 1);\n          setClockCount((sessionCount - 1) * 60);\n        } else if (!isPlaying) {\n          setSessionCount(sessionCount - 1);\n        } else if (currentTimer === 'Break') {\n          setSessionCount(sessionCount - 1);\n        }\n      }\n    } else if (type === 'Break') {\n      if (breakCount > 1) {\n        if (!isPlaying && currentTimer === 'Break') {\n          setBreakCount(breakCount - 1);\n          setClockCount((breakCount - 1) * 60);\n        } else if (!isPlaying) {\n          setBreakCount(breakCount - 1);\n        } else if (currentTimer === 'Session') {\n          setBreakCount(breakCount - 1);\n        }\n      }\n    }\n  };\n\n  const handleIncrease = (type) => {\n    if (type === 'Session') {\n      if (sessionCount < 60) {\n        if (!isPlaying && currentTimer === 'Session') {\n          setSessionCount(sessionCount + 1);\n          setClockCount((sessionCount + 1) * 60);\n        } else if (!isPlaying) {\n          setSessionCount(sessionCount + 1);\n        } else if (currentTimer === 'Break') {\n          setSessionCount(sessionCount + 1);\n        }\n      }\n    } else if (type === 'Break') {\n      if (breakCount < 60) {\n        if (!isPlaying && currentTimer === 'Break') {\n          setBreakCount(breakCount + 1);\n          setClockCount((breakCount + 1) * 60);\n        } else if (!isPlaying) {\n          setBreakCount(breakCount + 1);\n        } else if (currentTimer === 'Session') {\n          setBreakCount(breakCount + 1);\n        }\n      }\n    }\n  };\n\n  const breakTimer = {\n    title: 'Break Lenght',\n    count: breakCount,\n    type: 'Break',\n    handleIncrease,\n    handleDecrease,\n  };\n\n  const sessionTimer = {\n    title: 'Session Lenght',\n    count: sessionCount,\n    type: 'Session',\n    handleIncrease,\n    handleDecrease,\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"flex\">\n        <SetTimer {...breakTimer} />\n        <SetTimer {...sessionTimer} />\n      </div>\n      <div className=\"clock-container\">\n        <h1>{currentTimer}</h1>\n        <span>{convertTime(clockCount)}</span>\n        <div className=\"flex\">\n          <button onClick={handlePlayPause}>\n            <FontAwesomeIcon icon={isPlaying ? faPause : faPlay} />\n          </button>\n          <button onClick={handleReset}>\n            <FontAwesomeIcon icon={faSync} />\n          </button>\n        </div>\n        <audio src={`${sax}`} id=\"beep\" type=\"audio/mpeg\"></audio>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}